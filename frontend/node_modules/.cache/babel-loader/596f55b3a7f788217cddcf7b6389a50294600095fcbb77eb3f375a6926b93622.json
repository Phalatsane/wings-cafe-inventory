{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\wings cafe 2\\\\frontend\\\\src\\\\components\\\\Inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport '../styles/Inventory.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendURL = \"http://localhost:5000\";\nfunction Inventory() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [stockInputs, setStockInputs] = useState({}); // track input per product\n\n  const fetchProducts = async () => {\n    try {\n      const res = await fetch(`${backendURL}/products`);\n      const data = await res.json();\n      setProducts(data);\n    } catch (err) {\n      console.error(\"Error fetching products:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const handleStockChange = (productId, value) => {\n    setStockInputs({\n      ...stockInputs,\n      [productId]: value\n    });\n  };\n  const handleAddStock = async productId => {\n    const quantity = Number(stockInputs[productId]);\n    if (!quantity || quantity <= 0) {\n      alert(\"Please enter a valid quantity\");\n      return;\n    }\n    try {\n      const res = await fetch(`${backendURL}/products/${productId}/add-stock`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          quantity\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        alert(\"Stock added successfully!\");\n        fetchProducts(); // refresh products\n        setStockInputs({\n          ...stockInputs,\n          [productId]: \"\"\n        });\n      } else {\n        alert(data.error || \"Error adding stock\");\n      }\n    } catch (err) {\n      console.error(\"Error adding stock:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inventory\",\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inventory Module\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"inventory-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Current Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Add Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              value: stockInputs[product.id] || \"\",\n              onChange: e => handleStockChange(product.id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddStock(product.id),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Inventory, \"5ulqRTM+pAqhIZq/eRC4Yr+qduo=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","backendURL","Inventory","_s","products","setProducts","stockInputs","setStockInputs","fetchProducts","res","fetch","data","json","err","console","error","handleStockChange","productId","value","handleAddStock","quantity","Number","alert","method","headers","body","JSON","stringify","ok","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","name","price","type","min","id","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/wings cafe 2/frontend/src/components/Inventory.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport '../styles/Inventory.css';\r\n\r\nconst backendURL = \"http://localhost:5000\";\r\n\r\nfunction Inventory() {\r\n  const [products, setProducts] = useState([]);\r\n  const [stockInputs, setStockInputs] = useState({}); // track input per product\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const res = await fetch(`${backendURL}/products`);\r\n      const data = await res.json();\r\n      setProducts(data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching products:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleStockChange = (productId, value) => {\r\n    setStockInputs({ ...stockInputs, [productId]: value });\r\n  };\r\n\r\n  const handleAddStock = async (productId) => {\r\n    const quantity = Number(stockInputs[productId]);\r\n    if (!quantity || quantity <= 0) {\r\n      alert(\"Please enter a valid quantity\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(`${backendURL}/products/${productId}/add-stock`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ quantity }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        alert(\"Stock added successfully!\");\r\n        fetchProducts(); // refresh products\r\n        setStockInputs({ ...stockInputs, [productId]: \"\" });\r\n      } else {\r\n        alert(data.error || \"Error adding stock\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error adding stock:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"inventory\" style={{ padding: \"20px\" }}>\r\n      <h1>Inventory Module</h1>\r\n      <table className=\"inventory-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Product Name</th>\r\n            <th>Price ($)</th>\r\n            <th>Current Quantity</th>\r\n            <th>Add Stock</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map(product => (\r\n            <tr key={product.id}>\r\n              <td>{product.name}</td>\r\n              <td>{product.price}</td>\r\n              <td>{product.quantity}</td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  value={stockInputs[product.id] || \"\"}\r\n                  onChange={e => handleStockChange(product.id, e.target.value)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <button onClick={() => handleAddStock(product.id)}>Add</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inventory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}